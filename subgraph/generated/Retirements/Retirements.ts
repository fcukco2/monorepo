// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Retired extends ethereum.Event {
  get params(): Retired__Params {
    return new Retired__Params(this);
  }
}

export class Retired__Params {
  _event: Retired;

  constructor(event: Retired) {
    this._event = event;
  }

  get retiree(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tcoAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get usdcAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Retirements extends ethereum.SmartContract {
  static bind(address: Address): Retirements {
    return new Retirements("Retirements", address);
  }

  emitEvent(
    retiree: Address,
    token: Address,
    tcoAmount: BigInt,
    usdcAmount: BigInt
  ): boolean {
    let result = super.call(
      "emitEvent",
      "emitEvent(address,address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(retiree),
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromUnsignedBigInt(tcoAmount),
        ethereum.Value.fromUnsignedBigInt(usdcAmount)
      ]
    );

    return result[0].toBoolean();
  }

  try_emitEvent(
    retiree: Address,
    token: Address,
    tcoAmount: BigInt,
    usdcAmount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "emitEvent",
      "emitEvent(address,address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(retiree),
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromUnsignedBigInt(tcoAmount),
        ethereum.Value.fromUnsignedBigInt(usdcAmount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class EmitEventCall extends ethereum.Call {
  get inputs(): EmitEventCall__Inputs {
    return new EmitEventCall__Inputs(this);
  }

  get outputs(): EmitEventCall__Outputs {
    return new EmitEventCall__Outputs(this);
  }
}

export class EmitEventCall__Inputs {
  _call: EmitEventCall;

  constructor(call: EmitEventCall) {
    this._call = call;
  }

  get retiree(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tcoAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get usdcAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class EmitEventCall__Outputs {
  _call: EmitEventCall;

  constructor(call: EmitEventCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
